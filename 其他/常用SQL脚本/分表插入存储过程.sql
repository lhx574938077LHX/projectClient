-------------------------------------SPLIT_TEST---------------------------------------
--分表插入存储
SET SERVEROUTPUT ON;

--SIP S:Split I:Insert P:PROCEDURE
CREATE OR REPLACE PROCEDURE SIP_SPLIT_TEST (
  F_ID OUT NUMBER,
  F_COMPANY_ID NUMBER,
  F_USERNAME VARCHAR2,
  F_PASSWORD VARCHAR2,
  F_UKEY_INFO_ID NUMBER,
  F_REC_TIME NUMBER
) AS
V_TABLE_INDEX NUMBER(4,0) := 0; --当前表序列
V_ROW_MAX NUMBER(12,0) := 4; --单表数据最大请不要修改
V_TMP_VAL NUMBER(4,0) := 0; --用于判断表是否存在的变量
V_TABLE_NAME VARCHAR2(30 BYTE); --表名
V_SQL VARCHAR2(1024 BYTE); --SQL
BEGIN
  --获取插入ID
  SELECT SPLIT_TEST_ID_SEQUENCE.NEXTVAL INTO F_ID FROM DUAL;
  
  --计算表索引
  V_TABLE_INDEX := CEIL(F_ID/V_ROW_MAX);
  
  --设置表名
  V_TABLE_NAME := 'SPLIT_TEST_'||V_TABLE_INDEX;
  
  --查询表明在库中的数量
  SELECT COUNT(1) INTO V_TMP_VAL FROM ALL_TABLES WHERE TABLE_NAME=V_TABLE_NAME AND OWNER=USER;
  
  BEGIN
    V_SQL := 'INSERT INTO '||V_TABLE_NAME||'(ID,COMPANY_ID,USERNAME,PASSWORD,UKEY_INFO_ID,REC_TIME) VALUES(:1,:2,:3,:4,:5,:6)';
    DBMS_OUTPUT.PUT_LINE(V_SQL);
    
    IF V_TMP_VAL = 0 THEN 
      EXECUTE IMMEDIATE '
      CREATE TABLE '||V_TABLE_NAME||' 
      (	
		ID NUMBER(12,0) NOT NULL PRIMARY KEY,
		COMPANY_ID NUMBER(12,0) NOT NULL,
		USERNAME VARCHAR2(30 BYTE) NULL,
		PASSWORD VARCHAR2(32 BYTE) NULL,
		UKEY_INFO_ID NUMBER(12,0) NOT NULL,
		REC_TIME NUMBER(16,0) NOT NULL
      )';
      --设置字段备注
      EXECUTE IMMEDIATE 'COMMENT ON COLUMN '||V_TABLE_NAME||'.ID IS ''标识列''';
      EXECUTE IMMEDIATE 'COMMENT ON COLUMN '||V_TABLE_NAME||'.COMPANY_ID IS ''公司ID''';
      EXECUTE IMMEDIATE 'COMMENT ON COLUMN '||V_TABLE_NAME||'.USERNAME IS ''用户名''';
      EXECUTE IMMEDIATE 'COMMENT ON COLUMN '||V_TABLE_NAME||'.PASSWORD IS ''密码''';
      EXECUTE IMMEDIATE 'COMMENT ON COLUMN '||V_TABLE_NAME||'.UKEY_INFO_ID IS ''UKEY_INFO_ID''';
      EXECUTE IMMEDIATE 'COMMENT ON COLUMN '||V_TABLE_NAME||'.REC_TIME IS ''创建时间''';
      --创建ID约束
      EXECUTE IMMEDIATE 'ALTER TABLE '||V_TABLE_NAME||' ADD CONSTRAINT '||V_TABLE_NAME||'_ID_CHK CHECK(ID>='||(V_TABLE_INDEX*V_ROW_MAX-V_ROW_MAX+1)||' AND ID<='||(V_TABLE_INDEX*V_ROW_MAX)||')';
      
      --数据插入
      EXECUTE IMMEDIATE V_SQL USING F_ID,F_COMPANY_ID,F_USERNAME,F_PASSWORD,F_UKEY_INFO_ID,F_REC_TIME;
      DBMS_OUTPUT.PUT_LINE('创建表'||V_TABLE_NAME||'并插入数据成功');
    ELSE 
      --数据插入
      EXECUTE IMMEDIATE V_SQL USING F_ID,F_COMPANY_ID,F_USERNAME,F_PASSWORD,F_UKEY_INFO_ID,F_REC_TIME;
      DBMS_OUTPUT.PUT_LINE('表'||V_TABLE_NAME||'插入数据成功');
    END IF;
  EXCEPTION
    WHEN OTHERS THEN
	F_ID := 0;
    DBMS_OUTPUT.PUT_LINE('表'||V_TABLE_NAME||'插入数据时发生异常 SQLCODE:'||SQLCODE||' SQLERRM:'||SQLERRM);
  END;
END;
/
--创建序列
DECLARE s_num NUMBER;
BEGIN
  SELECT COUNT(1) INTO s_num FROM user_sequences WHERE sequence_name= 'SPLIT_TEST_ID_SEQUENCE';
  IF s_num = 1 THEN
    EXECUTE IMMEDIATE 'DROP SEQUENCE SPLIT_TEST_ID_SEQUENCE';
  END IF;
END;
/
CREATE SEQUENCE SPLIT_TEST_ID_SEQUENCE
INCREMENT BY 1  --每次增加几个
MINVALUE 1      --最小值为1
NOMAXVALUE      --不限制最大值
START WITH 1    --从1开始
CACHE 10        --缓存
ORDER;
--------------------------------------------------------------------------------------------

/*
SET SERVEROUTPUT ON;
DECLARE
F_ID NUMBER(12,0);
BEGIN
  F_ID:=0;
  SIP_SPLIT_TEST(F_ID,1,'USER1','123456',1,0);
  DBMS_OUTPUT.PUT_LINE('数据ID:'||F_ID||'插入数据成功');
END;

SELECT 

DROP TABLE SPLIT_TEST_1;
DROP TABLE SPLIT_TEST_2;
DROP TABLE SPLIT_TEST_3;
DROP TABLE SPLIT_TEST_4;
DROP TABLE SPLIT_TEST_5;
DROP TABLE SPLIT_TEST_6;
DROP TABLE SPLIT_TEST_7;
DROP TABLE SPLIT_TEST_8;
DROP TABLE SPLIT_TEST_9;

INSERT INTO SPLIT_TEST_1(ID,COMPANY_ID,USERNAME,PASSWORD,UKEY_INFO_ID,REC_TIME) VALUES(2,1,'USER1','123456',1,0);

SELECT * FROM SPLIT_TEST_1
UNION
SELECT * FROM SPLIT_TEST_2
UNION
SELECT * FROM SPLIT_TEST_3
UNION
SELECT * FROM SPLIT_TEST_4
UNION
SELECT * FROM SPLIT_TEST_5
UNION
SELECT * FROM SPLIT_TEST_6
*/